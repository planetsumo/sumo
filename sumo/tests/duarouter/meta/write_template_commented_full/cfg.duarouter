<?xml version="1.0" encoding="UTF-8"?>

<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://sumo.dlr.de/xsd/duarouterConfiguration.xsd">

    <configuration>
        <!-- Loads the named config on startup -->
        <configuration-file value="" synonymes="c configuration" type="FILE"/>

        <!-- Saves current configuration into FILE -->
        <save-configuration value="" synonymes="save-config" type="FILE"/>

        <!-- Saves a configuration template (empty) into FILE -->
        <save-template value="" type="FILE"/>

        <!-- Saves the configuration schema into FILE -->
        <save-schema value="" type="FILE"/>

        <!-- Adds comments to saved template, configuration, or schema -->
        <save-commented value="" synonymes="save-template.commented" type="BOOL"/>

    </configuration>

    <input>
        <!-- Use FILE as SUMO-network to route on -->
        <net-file value="" synonymes="n net" type="FILE"/>

        <!-- Read additional network data (districts, bus stops) from FILE(s) -->
        <additional-files value="" synonymes="a additional d districts taz-files" type="FILE"/>

        <!-- Read sumo routes, alternatives, flows, and trips from FILE(s) -->
        <route-files value="" synonymes="alternative-files alternatives-files f flow-files flows r t trip-files trips" type="FILE"/>

        <!-- Read network weights from FILE(s) -->
        <weight-files value="" synonymes="w weights" type="FILE"/>

        <!-- Read lane-based network weights from FILE(s) -->
        <lane-weight-files value="" type="FILE"/>

        <!-- Name of the xml attribute which gives the edge weight -->
        <weight-attribute value="traveltime" synonymes="measure x" type="STR"/>

        <!-- Determines where to load PHEMlight definitions from. -->
        <phemlight-path value="./PHEMlight/" type="FILE"/>

    </input>

    <output>
        <!-- Prefix which is applied to all output files. The special string &apos;TIME&apos; is replaced by the current time. -->
        <output-prefix value="" type="STR"/>

        <!-- Defines the number of digits after the comma for floating point output -->
        <precision value="2" type="INT"/>

        <!-- Defines the number of digits after the comma for lon,lat output -->
        <precision.geo value="6" type="INT"/>

        <!-- Write generated routes to FILE -->
        <output-file value="" synonymes="o output" type="FILE"/>

        <!-- Write used vehicle types into separate FILE -->
        <vtype-output value="" synonymes="vtype" type="FILE"/>

        <!-- Keep vTypeDistribution ids when writing vehicles and their types -->
        <keep-vtype-distributions value="false" type="BOOL"/>

        <!-- Write generated route alternatives to FILE -->
        <alternatives-output value="" synonymes="alternatives" type="FILE"/>

        <!-- Write exit times (weights) for each edge -->
        <exit-times value="false" type="BOOL"/>

    </output>

    <processing>
        <!-- Continue if a route could not be build -->
        <ignore-errors value="false" synonymes="continue-on-unbuild" type="BOOL"/>

        <!-- Assume input is unsorted -->
        <unsorted-input value="false" synonymes="unsorted" type="BOOL"/>

        <!-- Load routes for the next number of seconds ahead -->
        <route-steps value="200" synonymes="s" type="TIME"/>

        <!-- generate random departure times for flow input -->
        <randomize-flows value="false" type="BOOL"/>

        <!-- Prune the number of alternatives to INT -->
        <max-alternatives value="5" type="INT"/>

        <!-- Remove loops within the route; Remove turnarounds at start and end of the route -->
        <remove-loops value="false" type="BOOL"/>

        <!-- Tries to correct a false route -->
        <repair value="false" type="BOOL"/>

        <!-- Tries to correct an invalid starting edge by using the first usable edge instead -->
        <repair.from value="false" type="BOOL"/>

        <!-- Tries to correct an invalid destination edge by using the last usable edge instead -->
        <repair.to value="false" type="BOOL"/>

        <!-- Interpolate edge weights at interval boundaries -->
        <weights.interpolate value="false" synonymes="interpolate" type="BOOL"/>

        <!-- Use origin and destination zones (districts) for in- and output -->
        <with-taz value="false" type="BOOL"/>

        <!-- Aggregate routing queries with the same origin -->
        <bulk-routing value="false" type="BOOL"/>

        <!-- The number of parallel execution threads used for routing -->
        <routing-threads value="0" type="INT"/>

        <!-- Expand weights behind the simulation&apos;s end -->
        <weights.expand value="false" synonymes="expand-weights" type="BOOL"/>

        <!-- Select among routing algorithms [&apos;dijkstra&apos;, &apos;astar&apos;, &apos;CH&apos;, &apos;CHWrapper&apos;] -->
        <routing-algorithm value="dijkstra" type="STR"/>

        <!-- Aggregation period for the given weight files; triggers rebuilding of Contraction Hierarchy -->
        <weight-period value="3600" type="TIME"/>

        <!-- Initialize lookup table for astar from the given file (generated by marouter --all-pairs-output) -->
        <astar.all-distances value="" type="FILE"/>

        <!-- Initialize lookup table for astar ALT-variant from the given file -->
        <astar.landmark-distances value="" type="FILE"/>

        <!-- Save lookup table for astar ALT-variant to the given file -->
        <astar.save-landmark-distances value="" type="FILE"/>

        <!-- Use FLOAT as Gawron&apos;s beta -->
        <gawron.beta value="0.3" synonymes="gBeta" type="FLOAT"/>

        <!-- Use FLOAT as Gawron&apos;s a -->
        <gawron.a value="0.05" synonymes="gA" type="FLOAT"/>

        <!-- Save routes with near zero probability -->
        <keep-all-routes value="false" type="BOOL"/>

        <!-- Only reuse routes from input, do not calculate new ones -->
        <skip-new-routes value="false" type="BOOL"/>

        <!-- Route all public transport input -->
        <ptline-routing value="false" type="BOOL"/>

        <!-- Use c-logit model (deprecated in favor of --route-choice-method logit) -->
        <logit value="false" type="BOOL"/>

        <!-- Choose a route choice method: gawron, logit, or lohse -->
        <route-choice-method value="gawron" type="STR"/>

        <!-- Use FLOAT as logit&apos;s beta -->
        <logit.beta value="-1" synonymes="lBeta" type="FLOAT"/>

        <!-- Use FLOAT as logit&apos;s gamma -->
        <logit.gamma value="1" synonymes="lGamma" type="FLOAT"/>

        <!-- Use FLOAT as logit&apos;s theta (negative values mean auto-estimation) -->
        <logit.theta value="-1" synonymes="lTheta" type="FLOAT"/>

        <!-- Use FLOAT as a factor on pedestrian maximum speed during intermodal routing -->
        <persontrip.walkfactor value="0.9" type="FLOAT"/>

    </processing>

    <defaults>
        <!-- Assigns a default depart lane -->
        <departlane value="" type="STR"/>

        <!-- Assigns a default depart position -->
        <departpos value="" type="STR"/>

        <!-- Assigns a default depart speed -->
        <departspeed value="" type="STR"/>

        <!-- Assigns a default arrival lane -->
        <arrivallane value="" type="STR"/>

        <!-- Assigns a default arrival position -->
        <arrivalpos value="" type="STR"/>

        <!-- Assigns a default arrival speed -->
        <arrivalspeed value="" type="STR"/>

        <!-- Defaults will override given values -->
        <defaults-override value="false" type="BOOL"/>

    </defaults>

    <time>
        <!-- Defines the begin time; Previous trips will be discarded -->
        <begin value="0" synonymes="b" type="TIME"/>

        <!-- Defines the end time; Later trips will be discarded; Defaults to the maximum time that SUMO can represent -->
        <end value="9223372036854774" synonymes="e" type="TIME"/>

    </time>

    <report>
        <!-- Switches to verbose output -->
        <verbose value="false" synonymes="v" type="BOOL"/>

        <!-- Prints option values before processing -->
        <print-options value="false" type="BOOL"/>

        <!-- Prints this screen -->
        <help value="false" synonymes="?" type="BOOL"/>

        <!-- Prints the current version -->
        <version value="false" synonymes="V" type="BOOL"/>

        <!-- Set schema validation scheme of XML inputs (&quot;never&quot;, &quot;auto&quot; or &quot;always&quot;) -->
        <xml-validation value="auto" synonymes="X" type="STR"/>

        <!-- Set schema validation scheme of SUMO network inputs (&quot;never&quot;, &quot;auto&quot; or &quot;always&quot;) -->
        <xml-validation.net value="never" type="STR"/>

        <!-- Disables output of warnings -->
        <no-warnings value="false" synonymes="W suppress-warnings" type="BOOL"/>

        <!-- Writes all messages to FILE (implies verbose) -->
        <log value="" synonymes="l log-file" type="FILE"/>

        <!-- Writes all non-error messages to FILE (implies verbose) -->
        <message-log value="" type="FILE"/>

        <!-- Writes all warnings and errors to FILE -->
        <error-log value="" type="FILE"/>

        <!-- Defines how often statistics shall be printed -->
        <stats-period value="-1" type="INT"/>

        <!-- Disable console output of route parsing step -->
        <no-step-log value="false" type="BOOL"/>

    </report>

    <random_number>
        <!-- Initialises the random number generator with the current system time -->
        <random value="false" synonymes="abs-rand" type="BOOL"/>

        <!-- Initialises the random number generator with the given value -->
        <seed value="23423" synonymes="srand" type="INT"/>

    </random_number>

</configuration>
